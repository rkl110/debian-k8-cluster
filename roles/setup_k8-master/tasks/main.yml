---
# tasks file for install_k8

- name: Disable SWAP in fstab 
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Install python3-yaml
  apt:
    pkg:
    - python3-yaml
    - python3-kubernetes

- name: update-alternatives
  community.general.alternatives:
    name: "{{ item.name }}"
    path: "{{ item.path }}"
  with_items:
    - { name: ebtables, path: /usr/sbin/ebtables-legacy }
    - { name: ip6tables, path: /usr/sbin/ip6tables-legacy }
    - { name: iptables, path: /usr/sbin/iptables-legacy }

- name: Add an Apt signing key, uses whichever key is at the URL
  ansible.builtin.apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Add k8 Repo
  ansible.builtin.apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    update_cache: true
    state: present

- name: Install a list of packages
  apt:
    pkg: "{{ packages }}"
  
- name: Hold kubeadm
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items: "{{ packages }}"

- name: Template Permanent Load Modules
  template:
    src: containerd.conf.j2
    dest: /etc/modules-load.d/containerd.conf
    mode: 0644
    group: root
    owner: root

- name: Add Modules
  community.general.modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - overlay
    - br_netfilter

- name: Template kubernetes.conf
  template:
    src: kubernetes.conf.j2
    dest: /etc/sysctl.d/kubernetes.conf
    owner: root
    group: root
    mode: 0644
  register: result

- shell: sysctl -p --system
  become: yes
  when: result.changed

- name: Template containerd config.toml
  template:
    src: config.toml.j2
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: 0644
  register: result

- name: Restart containerd when config.toml changed
  systemd:
    state: restarted
    name: containerd
  when: result.changed

- name: kubeadm init master
  shell: "kubeadm init --pod-network-cidr=10.244.0.0/16 >> cluster_initialized.txt"
  args:
    chdir: $HOME
    creates: cluster_initialized.txt
  run_once: true

- name: Ensure .kube directory exists.
  file:
    path: ~/.kube
    state: directory
    mode: 0755

- name: Symlink the kubectl admin.conf to ~/.kube/conf.
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link
    mode: 0644

  # Download and apply networking
  # kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  # kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
- name: Download kube-flannel.yml
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    dest: ~/kube-flannel.yml
    mode: '0664'

- name: Apply kube-flannel.yml
  kubernetes.core.k8s:
    state: present
    src: ~/kube-flannel.yml
  when: not ansible_check_mode

  #kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.4.0/aio/deploy/recommended.yaml
- name: Install Dashboard
  ansible.builtin.get_url:
    url:  https://raw.githubusercontent.com/kubernetes/dashboard/v2.4.0/aio/deploy/recommended.yaml
    dest: ~/dashboard.yaml
    mode: '0664'

- name: Apply dashboard.yaml
  kubernetes.core.k8s:
    state: present
    src: ~/dashboard.yaml
  when: not ansible_check_mode
